{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"My Home Lab Journey \u00b6 This is a record of my home lab journey from 2024 and onward as well as various cloud native topics and other content as I find it!.","title":"Home"},{"location":"#my_home_lab_journey","text":"This is a record of my home lab journey from 2024 and onward as well as various cloud native topics and other content as I find it!.","title":"My Home Lab Journey"},{"location":"dotfiles_git/","text":"Summary \u00b6 Tired of manually copying config files to your desktop or rewriting them everytime a new VM or machine is set up? There is easy way to back up your dotfiles and other important config: Git! Before we begin: - Make sure to set up an empty public repo named dotfiles and ensure a README is created. - Credentials for git access are set up (if cloning via ssh) NOTE *: DO NOT STORE API KEYS & OTHER SENSITIVE CREDENTIALS IN YOUR DOTFILES! Setup \u00b6 Below are some quick steps to get it set up: #this prevents you from commiting this directory to the repo creating a weird loop echo \".cfg\" >> .gitignore #clones the repo to the .cfg directory git clone --bare git@github.com:ORG/dotfiles.git $HOME /.cfg #store this alias in your shell rc or alias file alias dev = '/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME' #cleans up your prompt so you only see untracked files when you explicitly ask for them dev config --local status.showUntrackedFiles no A few notes on the set up above: Refresh your shell after adding the alias: Example: echo 'alias dev='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'' >> .bashrc OR .zshrc && . ~/.bashrc or . ~/.zshrc Adding files to your repo goes as follows: Example: dev add FILE Commit Files: Example: dev commit -a Push to repo: Example: dev push Ensure the remote origin is configured to point to the dotfiles repo before the first push. Here is a link to my public dotfiles for reference. dotfiles Feel free to explore and see what works for you. Until next time, stay curious my friends!","title":"Automate your Dotfiles"},{"location":"dotfiles_git/#summary","text":"Tired of manually copying config files to your desktop or rewriting them everytime a new VM or machine is set up? There is easy way to back up your dotfiles and other important config: Git! Before we begin: - Make sure to set up an empty public repo named dotfiles and ensure a README is created. - Credentials for git access are set up (if cloning via ssh) NOTE *: DO NOT STORE API KEYS & OTHER SENSITIVE CREDENTIALS IN YOUR DOTFILES!","title":"Summary"},{"location":"dotfiles_git/#setup","text":"Below are some quick steps to get it set up: #this prevents you from commiting this directory to the repo creating a weird loop echo \".cfg\" >> .gitignore #clones the repo to the .cfg directory git clone --bare git@github.com:ORG/dotfiles.git $HOME /.cfg #store this alias in your shell rc or alias file alias dev = '/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME' #cleans up your prompt so you only see untracked files when you explicitly ask for them dev config --local status.showUntrackedFiles no A few notes on the set up above: Refresh your shell after adding the alias: Example: echo 'alias dev='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'' >> .bashrc OR .zshrc && . ~/.bashrc or . ~/.zshrc Adding files to your repo goes as follows: Example: dev add FILE Commit Files: Example: dev commit -a Push to repo: Example: dev push Ensure the remote origin is configured to point to the dotfiles repo before the first push. Here is a link to my public dotfiles for reference. dotfiles Feel free to explore and see what works for you. Until next time, stay curious my friends!","title":"Setup"},{"location":"hardware/","text":"Introduction \u00b6 Over the course of 2024, I transformed my home lab into a form factor design that could all fit on my desk. Current Specs \u00b6 - \u00b6","title":"Hardware"},{"location":"hardware/#introduction","text":"Over the course of 2024, I transformed my home lab into a form factor design that could all fit on my desk.","title":"Introduction"},{"location":"hardware/#current_specs","text":"","title":"Current Specs"},{"location":"hardware/#-","text":"","title":"-"},{"location":"projects/","text":"aegis - Repeatable, immutable, and scalable security research w/ Docker Prox-Tor - A Simple Tor Proxy for routing traffic lab - snippets of code and configs I use daily vm-bootstrap - simple scripts I use to bootstrap my VMs Upcoming Projects & Studies \u00b6 2024 so far has been alot of Kubernetes! I'm shifting gears back into web development to get an app ready to deploy in a cluster. I'm finally running bare metal Talos Linux. 2 years of learning, breaking and fixing has taught me alot about Kubernetes and Linux in general. 2025: CISSP, AWS Deep Dive, Full stack website","title":"Projects"},{"location":"projects/#upcoming_projects_studies","text":"2024 so far has been alot of Kubernetes! I'm shifting gears back into web development to get an app ready to deploy in a cluster. I'm finally running bare metal Talos Linux. 2 years of learning, breaking and fixing has taught me alot about Kubernetes and Linux in general. 2025: CISSP, AWS Deep Dive, Full stack website","title":"Upcoming Projects &amp; Studies"},{"location":"pve_post_install_part_I/","text":"Prerequisites: \u00b6 Familarity with Linux, Proxmox and Terraform Intro \u00b6 Hypervisors are a core part of building a home lab. Whether it is Proxmox, Hyper-V or even just VirtualBox, a hypervisor gives us a large arena to experiment and test our skills. I use Proxmox at home and currently run a two node cluster, one on an old desktop and one on a NUC. Ref: Beelink S12 I've installed proxmox countless times and I find myself running the same commands over and over again. I will eventually automate more of the hardware portion but after getting Proxmox installed, I make the following configuration changes to hit the ground running: Add a Admin user for the GUI: \u00b6 Add a non-root admin account at the OS level and for the web GUI: $ pveum user add admin@pve -comment \"admin user\" $ pveum passwd admin@pve $ pveum group add admin -comment \"System Administrators\" $ pveum acl modify / -group admin -role Administrator $ pveum user modify admin@pve -group admin Add sudo user on the Debian Host: \u00b6 $ adduser admin $ usermod -aG sudo admin $ passwd admin #change the admin account password Generate Proxmox API Token \u00b6 Set up an API token for provisioning resources in Proxmox (with the newly created admin account): $ sudo pveum role add TerraformProv \\ -privs \"Datastore.AllocateSpace Datastore.Audit Pool.Allocate Sys.Audit Sys.Console Sys.Modify VM.Allocate VM.Audit VM.Clone VM.Config.CDROM VM.Config.Cloudinit VM.Config.CPU VM.Config.Disk VM.Config.HWType VM.Config.Memory VM.Config.Network VM.Config.Options VM.Migrate VM.Monitor VM.PowerMgmt SDN.Use SDN.Allocate SDN.Audit\" $ sudo pveum user add tf-user@pve $ sudo pveum aclmod / -user tf-user@pve -role TerraformProv $ sudo pveum user token add tf-user@pve terraform-provisioner --privsep 0 #make sure to copy the API token displayed in the prompt and store it in a secure place. It's required to authenticate with the #proxmox API. #Token needed in provider config #home-1 = xxxxxxxx-xxxxxxx-xxxxxx-xxxxxxxx $ sudo pveum aclmod / -token 'tf-user@pve!terraform-provisioner' -role TerraformProv Summary \u00b6 These steps will help anyone get their Proxmox journey started. On a side note , I did not show how to secure SSH access for Proxmox. That is your homework!","title":"Proxmox Post Install Part I"},{"location":"pve_post_install_part_I/#prerequisites","text":"Familarity with Linux, Proxmox and Terraform","title":"Prerequisites:"},{"location":"pve_post_install_part_I/#intro","text":"Hypervisors are a core part of building a home lab. Whether it is Proxmox, Hyper-V or even just VirtualBox, a hypervisor gives us a large arena to experiment and test our skills. I use Proxmox at home and currently run a two node cluster, one on an old desktop and one on a NUC. Ref: Beelink S12 I've installed proxmox countless times and I find myself running the same commands over and over again. I will eventually automate more of the hardware portion but after getting Proxmox installed, I make the following configuration changes to hit the ground running:","title":"Intro"},{"location":"pve_post_install_part_I/#add_a_admin_user_for_the_gui","text":"Add a non-root admin account at the OS level and for the web GUI: $ pveum user add admin@pve -comment \"admin user\" $ pveum passwd admin@pve $ pveum group add admin -comment \"System Administrators\" $ pveum acl modify / -group admin -role Administrator $ pveum user modify admin@pve -group admin","title":"Add a Admin user for the GUI:"},{"location":"pve_post_install_part_I/#add_sudo_user_on_the_debian_host","text":"$ adduser admin $ usermod -aG sudo admin $ passwd admin #change the admin account password","title":"Add sudo user on the Debian Host:"},{"location":"pve_post_install_part_I/#generate_proxmox_api_token","text":"Set up an API token for provisioning resources in Proxmox (with the newly created admin account): $ sudo pveum role add TerraformProv \\ -privs \"Datastore.AllocateSpace Datastore.Audit Pool.Allocate Sys.Audit Sys.Console Sys.Modify VM.Allocate VM.Audit VM.Clone VM.Config.CDROM VM.Config.Cloudinit VM.Config.CPU VM.Config.Disk VM.Config.HWType VM.Config.Memory VM.Config.Network VM.Config.Options VM.Migrate VM.Monitor VM.PowerMgmt SDN.Use SDN.Allocate SDN.Audit\" $ sudo pveum user add tf-user@pve $ sudo pveum aclmod / -user tf-user@pve -role TerraformProv $ sudo pveum user token add tf-user@pve terraform-provisioner --privsep 0 #make sure to copy the API token displayed in the prompt and store it in a secure place. It's required to authenticate with the #proxmox API. #Token needed in provider config #home-1 = xxxxxxxx-xxxxxxx-xxxxxx-xxxxxxxx $ sudo pveum aclmod / -token 'tf-user@pve!terraform-provisioner' -role TerraformProv","title":"Generate Proxmox API Token"},{"location":"pve_post_install_part_I/#summary","text":"These steps will help anyone get their Proxmox journey started. On a side note , I did not show how to secure SSH access for Proxmox. That is your homework!","title":"Summary"},{"location":"resources/","text":"Personal \u00b6 Dotfiles General Stuff \u00b6 Security Creators 44 Cybersecurity Youtube Channels To Learn It by Samir | Hero Vet Sec LEET Translator - leet translator Secret Book of Knowledge - general repo of IT tools, nice I could spend all day in here. Its got tons of stuff Cheatsheets for everything - general cheat sheets for anything!! How to build a VM - how to build a vm Security Cert Roadmap - cybersec roadmap!! even shows exam cost!!! Awesome IT Resources - list of IT topics!! great source NEWS/Conferences \u00b6 SANS Info - useful infosec links Dark Reading - Great cyber news source Hacker News Infosec Conferences Collection of Security Conferences - collection of security conferences recordings Defcon Darknet Defensive Security \u00b6 Malware Analysis Exercises Live IR CRF - Live IR CTF Malware Traffic Analysis.Net - traffic analysis exercises Cyber Chef Hybrid Analysis - good tool for automated analysis VirusTotal Packet Total Free Malware Analysis Training From DFIR Diva Blue Team Tactics - blue team tactics Awesome Blue Team - good collab page of Blue team tools.. Awesome Incident Response Eric Zimmmerman Tools - tool repo Dider Stevens Malware Analysis Tools Repo - great repo of memory and executable analysis tools Blue Team Labs DFIR-Tools GitHub Repo Elastic-Container varc - Volatile Artifact Collector Volatility Command Reference Splunk Attack Range Cyberchef Recipes BlueCloud Detection Lab Offensive Security \u00b6 CTF \u00b6 Ippsec Rocks CTF Walkthroughs -- best resource!!! 0xdf hacks stuff Home - Vuldev HackTheBox API Reference CTFTime.org Pentesting \u00b6 Exploit Notes - A well put together reference of various pentesting TTPs RedStack Offensive Security Education Platform - Another TTP reference that falls in line more with Red Teaming Pentest-Tools - comprehensive list of tools Awesome Pentest Tools - another great repo of tools and resources Internal Pentest Playbook - Internal Pen-test playbook. This is good for observing real world techniques used by pentesters PENTESTING BIBLE - a collection of useful articles for different topics Pentesting Cheatsheet - nice methodology run down Pentest notes and one liners - another useful repo of oneliners and references Pen-testing Shell Prompts HOUDINI: Offensive Docker Images Red Teaming \u00b6 Red-Team-Infrastructure Redteam-projects - list of projects for practice and learning MITRE ATTACK Framework - MITRE Attack Framework. Great for identifying TTPs and being able to label attack techniques. Attack Framework for containers IRedTeam - another great resource with individual topics for exploration Offensive Security Cheatsheets Creating a Red Team Blue Team Home Lab OutFlank Red Team Tools Redteam.guide - good repo of templates, guides and cheat sheets for building and operating red teams. OpenSecurityTraining2 - reverse engineering, malware analysis OSCP \u00b6 [OSCP Prep Guide 2023] (https://johnjhacking.com/blog/oscp-reborn-2023/) Active Directory OSCP Edition OSCP Exam Report Template Road to OSCP Write-ups \u00b6 Detectify Labs: Write-ups and Tips from security researchers Cloud \u00b6 Cloud Pentesting Resources - Cloud pen testing resources Hacking The Cloud","title":"Links & Resources, Creators"},{"location":"resources/#personal","text":"Dotfiles","title":"Personal"},{"location":"resources/#general_stuff","text":"Security Creators 44 Cybersecurity Youtube Channels To Learn It by Samir | Hero Vet Sec LEET Translator - leet translator Secret Book of Knowledge - general repo of IT tools, nice I could spend all day in here. Its got tons of stuff Cheatsheets for everything - general cheat sheets for anything!! How to build a VM - how to build a vm Security Cert Roadmap - cybersec roadmap!! even shows exam cost!!! Awesome IT Resources - list of IT topics!! great source","title":"General Stuff"},{"location":"resources/#newsconferences","text":"SANS Info - useful infosec links Dark Reading - Great cyber news source Hacker News Infosec Conferences Collection of Security Conferences - collection of security conferences recordings Defcon Darknet","title":"NEWS/Conferences"},{"location":"resources/#defensive_security","text":"Malware Analysis Exercises Live IR CRF - Live IR CTF Malware Traffic Analysis.Net - traffic analysis exercises Cyber Chef Hybrid Analysis - good tool for automated analysis VirusTotal Packet Total Free Malware Analysis Training From DFIR Diva Blue Team Tactics - blue team tactics Awesome Blue Team - good collab page of Blue team tools.. Awesome Incident Response Eric Zimmmerman Tools - tool repo Dider Stevens Malware Analysis Tools Repo - great repo of memory and executable analysis tools Blue Team Labs DFIR-Tools GitHub Repo Elastic-Container varc - Volatile Artifact Collector Volatility Command Reference Splunk Attack Range Cyberchef Recipes BlueCloud Detection Lab","title":"Defensive Security"},{"location":"resources/#offensive_security","text":"","title":"Offensive Security"},{"location":"resources/#ctf","text":"Ippsec Rocks CTF Walkthroughs -- best resource!!! 0xdf hacks stuff Home - Vuldev HackTheBox API Reference CTFTime.org","title":"CTF"},{"location":"resources/#pentesting","text":"Exploit Notes - A well put together reference of various pentesting TTPs RedStack Offensive Security Education Platform - Another TTP reference that falls in line more with Red Teaming Pentest-Tools - comprehensive list of tools Awesome Pentest Tools - another great repo of tools and resources Internal Pentest Playbook - Internal Pen-test playbook. This is good for observing real world techniques used by pentesters PENTESTING BIBLE - a collection of useful articles for different topics Pentesting Cheatsheet - nice methodology run down Pentest notes and one liners - another useful repo of oneliners and references Pen-testing Shell Prompts HOUDINI: Offensive Docker Images","title":"Pentesting"},{"location":"resources/#red_teaming","text":"Red-Team-Infrastructure Redteam-projects - list of projects for practice and learning MITRE ATTACK Framework - MITRE Attack Framework. Great for identifying TTPs and being able to label attack techniques. Attack Framework for containers IRedTeam - another great resource with individual topics for exploration Offensive Security Cheatsheets Creating a Red Team Blue Team Home Lab OutFlank Red Team Tools Redteam.guide - good repo of templates, guides and cheat sheets for building and operating red teams. OpenSecurityTraining2 - reverse engineering, malware analysis","title":"Red Teaming"},{"location":"resources/#oscp","text":"[OSCP Prep Guide 2023] (https://johnjhacking.com/blog/oscp-reborn-2023/) Active Directory OSCP Edition OSCP Exam Report Template Road to OSCP","title":"OSCP"},{"location":"resources/#write-ups","text":"Detectify Labs: Write-ups and Tips from security researchers","title":"Write-ups"},{"location":"resources/#cloud","text":"Cloud Pentesting Resources - Cloud pen testing resources Hacking The Cloud","title":"Cloud"}]}